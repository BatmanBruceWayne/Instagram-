'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};exports.default =

showReducer;var _initialState = require('./initialState');var _initialState2 = _interopRequireDefault(_initialState);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}function showReducer() {var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _initialState2.default;var action = arguments[1];

  switch (action.type) {

    case 'LOAD_POST':
      return _extends({},
      state, { listPost: [].concat(_toConsumableArray(state.listPost), _toConsumableArray(action.listPost)) });

    case 'LOAD_COMMENT':
      return _extends({},
      state, { listComment: [].concat(_toConsumableArray(action.listComment)) });


    case 'LOAD_LIKE':
      return _extends({},
      state, { like: action.like });

    case 'IS_ADD_COMMENT':
      return _extends({},
      state, { isAdding: !state.isAdding });

    case 'LOAD_PAGE_ID':
      return _extends({},
      state, { page_id: state.page_id + 1 });

    default:
      return state;}

}